AWSTemplateFormatVersion: 2010-09-09
Description: Template to deploy ETL.

Resources:
  LambdaFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
              - lambda.amazonaws.com
          Action:
            - sts:AssumeRole
      Path: "/"
      PermissionsBoundary: !Sub arn:aws:iam::${AWS::AccountId}:policy/ScopePermissions
      Policies:
      - PolicyName: LambdaLogsPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: '*'
      - PolicyName: s3ListAccessPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
                - s3:ListObjects
                - s3:ListBucket
                - s3:GetObject
            Resource: '*' #REVISE THIS. IT SHOULD ONLY BE THE RELEVANT BUCKET

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Runtime: python3.9
      Handler: index.handler
      Role: !GetAtt LambdaFunctionRole.Arn
      Layers: 
        - arn:aws:lambda:eu-west-1:948243690849:layer:python_39_psycopg2_layer:1
        - arn:aws:lambda:eu-west-1:336392948345:layer:AWSSDKPandas-Python39:2
        #may need to add further layers with all the dependencies
      Code:
      #Replace code under zipfile with our code.
        ZipFile: |
          import logging
          LOGGER = logging.getLogger()
          LOGGER.setLevel(logging.INFO)
          def handler(event, context):
            LOGGER.info(f'Event structure: {event}')

  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: stackbucketg5
#THESE 4 LINES ARE TO BE COMMENTED THE FIRST TIME AROUND CREATING THE STACK
#THEN UNCOMMENTS UPDATE THE TEMPLATE IN THE TEMPLATE BUCKET
#THEN UPDATE THE STACK
      # NotificationConfiguration:
      #   LambdaConfigurations:
      #     - Event: s3:ObjectCreated:*
      #       Function: !GetAtt LambdaFunction.Arn

  S3BucketPermission:
    Type: AWS::Lambda::Permission
    Properties: 
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt LambdaFunction.Arn
      Principal: s3.amazonaws.com
      SourceArn: !GetAtt S3Bucket.Arn

  
